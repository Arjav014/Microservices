version: "3.9"

services:
  # 游릭 PRODUCT SERVICE
  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "5678:5678"
    environment:
      - PORT=5678
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
      - MONGO_DB_NAME=productDB
      - MONGO_URI=mongodb://root:example@mongo-db:27017/productDB?authSource=admin
    depends_on:
      - mongo-db
      - rabbitmq

  # 游릭 USER SERVICE
  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "5001:5001"
    environment:
      - PORT=5001
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
      - MONGO_DB_NAME=userDB
      - MONGO_URI=mongodb://root:example@mongo-db:27017/userDB?authSource=admin
      - JWT_SECRET=your_jwt_secret_here
    depends_on:
      - mongo-db
      - rabbitmq

  # 游릭 ORDER SERVICE
  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - MONGO_USERNAME=root
      - MONGO_PASSWORD=example
      - MONGO_DB_NAME=orderDB
      - MONGO_URI=mongodb://root:example@mongo-db:27017/orderDB?authSource=admin
      - JWT_SECRET=your_jwt_secret_here
      - EMAIL_USER=arjav2768@gmail.com
      - EMAIL_PASS=dooo alex jatw ujry
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
    depends_on:
      - mongo-db
      - product-service
      - rabbitmq

  # 游릭 SINGLE MONGO INSTANCE
  mongo-db:
    image: mongo:6
    container_name: mongo-db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # 游릭 RABBITMQ (Single Instance)
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"   # RabbitMQ protocol
      - "15672:15672" # RabbitMQ management dashboard
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongo-data:
